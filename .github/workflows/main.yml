name: Retag latest image and bump Helm tag

on:
  workflow_dispatch: {}
  schedule:
    - cron: ""   # hourly; remove if you want manual only

permissions:
  contents: write

jobs:
  retag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.meta.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute new tag (UTC timestamp)
        id: meta
        run: echo "new_tag=$(date -u +%Y%m%d%H%M%S)" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx (for imagetools)
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Verify :latest exists
        env:
          IMAGE_REPO: kiril011/student-api   # <-- change if needed
        run: docker buildx imagetools inspect "$IMAGE_REPO:latest" >/dev/null

      - name: Retag :latest -> :$NEW_TAG
        env:
          IMAGE_REPO: kiril011/student-api
          NEW_TAG: ${{ steps.meta.outputs.new_tag }}
        run: |
          docker buildx imagetools create \
            -t "$IMAGE_REPO:$NEW_TAG" \
            "$IMAGE_REPO:latest"

      - name: Show new tag digest
        env:
          IMAGE_REPO: kiril011/student-api
          NEW_TAG: ${{ steps.meta.outputs.new_tag }}
        run: docker buildx imagetools inspect "$IMAGE_REPO:$NEW_TAG"

  bump-helm:
    needs: retag
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install yq (local)
        run: |
          mkdir -p "$RUNNER_TEMP/bin"
          curl -fsSL https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o "$RUNNER_TEMP/bin/yq"
          chmod +x "$RUNNER_TEMP/bin/yq"
          echo "$RUNNER_TEMP/bin" >> "$GITHUB_PATH"

      - name: Update values.yaml with new tag
        env:
          VALUES_FILE: student-stack/values.yaml
          IMAGE_REPO:  kiril011/student-api    # <-- change if needed
          NEW_TAG:     ${{ needs.retag.outputs.new_tag }}
        run: |
          yq -i '.image.repository = env(IMAGE_REPO)' "$VALUES_FILE"
          yq -i '.image.tag        = env(NEW_TAG)'    "$VALUES_FILE"
          echo "---- diff ----"
          git --no-pager diff -- "$VALUES_FILE" || true

      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add student-stack/values.yaml
          git commit -m "[skip ci] chore(helm): bump image tag to $NEW_TAG" || exit 0
          git pull --rebase
          git push

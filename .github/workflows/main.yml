name: Update Helm image tag (self-hosted)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 * * * *"  # hourly; remove if you only want manual runs

permissions:
  contents: write

concurrency:
  group: helm-image-bump
  cancel-in-progress: false

jobs:
  bump:
    runs-on: [self-hosted, linux]
    env:
      IMAGE_REPO: kiril011/student-api
      VALUES_FILE: student-stack/values.yaml

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq & yq locally (no sudo)
        run: |
          mkdir -p "$RUNNER_TEMP/bin"
          curl -fsSL https://github.com/jqlang/jq/releases/download/jq-1.7.1/jq-linux-amd64 -o "$RUNNER_TEMP/bin/jq"
          curl -fsSL https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o "$RUNNER_TEMP/bin/yq"
          chmod +x "$RUNNER_TEMP/bin/jq" "$RUNNER_TEMP/bin/yq"
          echo "$RUNNER_TEMP/bin" >> "$GITHUB_PATH"

      - name: Determine latest Docker Hub tag
        id: latest
        run: |
          echo "Fetching latest tag for ${IMAGE_REPO}â€¦"
          TAG=$(curl -fsSL "https://hub.docker.com/v2/repositories/${IMAGE_REPO}/tags?page_size=50&ordering=last_updated" \
            | jq -r '.results[].name' | grep -v '^latest$' | head -n1)
          [ -n "$TAG" ] || { echo "No tag found"; exit 1; }
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Latest tag: $TAG"

      - name: Show current values.yaml image fields
        run: |
          echo "Repo: $(yq '.image.repository' ${VALUES_FILE})"
          echo "Tag : $(yq '.image.tag' ${VALUES_FILE})"

      - name: Update values.yaml if tag changed
        run: |
          NEW_TAG='${{ steps.latest.outputs.tag }}'
          CUR_TAG=$(yq '.image.tag' "${VALUES_FILE}")
          yq -i '.image.repository = env(IMAGE_REPO)' "${VALUES_FILE}"
          if [ "$CUR_TAG" = "$NEW_TAG" ]; then
            echo "No change needed."
            exit 0
          fi
          yq -i ".image.tag = \"$NEW_TAG\"" "${VALUES_FILE}"
          git --no-pager diff -- ${VALUES_FILE} || true

      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${VALUES_FILE}"
          if git diff --staged --quiet; then
            echo "Nothing to commit"; exit 0
          fi
          git commit -m "[skip ci] chore(helm): bump image tag to ${{ steps.latest.outputs.tag }}"
          git pull --rebase
          git push
